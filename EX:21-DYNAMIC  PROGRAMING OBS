#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define N 6

int keys[N] = {10, 12, 20, 35, 40, 50};
int freq[N] = {34, 8, 50, 21, 16, 9};
int cost[N][N];

int minCost(int i, int j) {
    if (cost[i][j] != INT_MAX)
        return cost[i][j];
    if (i == j)
        return freq[i];
    int fsum = 0;
    for (int k = i; k <= j; k++)
        fsum += freq[k];
    for (int r = i; r <= j; r++) {
        int val = minCost(i, r - 1) + minCost(r + 1, j) + fsum;
        if (val < cost[i][j])
            cost[i][j] = val;
    }
    return cost[i][j];
}

int main(void) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            cost[i][j] = INT_MAX;
    }
    printf("Cost of Optimal BST: %d\n", minCost(0, N - 1));
    return 0;
}
